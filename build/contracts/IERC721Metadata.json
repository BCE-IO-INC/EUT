{
  "contractName": "IERC721Metadata",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IERC721.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC165.sol\":{\"keccak256\":\"0xe389fed1644dc0ca2b2d42239eabc0967bf1b322789b7423870d4fc18ff2615e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f56729fe541667129ca59a712c56db2111ddac094382f3d8ca8932a8e1a81c\",\"dweb:/ipfs/QmQzv8geQoX1FDE9Cu4Egm7ZVC9TwPytRXEL87paJ6Hf8j\"]},\"project:/contracts/EutLibrary.sol\":{\"keccak256\":\"0xc90ef695b9d320d13a7379add7f7c3476ad978ff738a6c41643514398e2e2c21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c6e102d2f285946bcd638f829650160ffc2da4917ba4b9f4edf500cd0c26382\",\"dweb:/ipfs/QmeorNez6CgChYy47XJYiiZQggakAnuiQnG53QFFvwQKZi\"]},\"project:/contracts/IERC165.sol\":{\"keccak256\":\"0x3158c0ce812ec4b81a84847b98ddbfda8388b8f62e22320688978f30a1d6b05c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e1723e6b0737a7416916c2c15685e6700cd133d79bcd1b92374ba4d566aaa85\",\"dweb:/ipfs/QmaQnQpXcG1Fx3qgCg5fUcuyKTG1eMgd3wWkxbSuYMSyAJ\"]},\"project:/contracts/IERC721.sol\":{\"keccak256\":\"0xb310deecb22776551e262eba290927d604aa047f0ca925e15a733952dfb4608b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba43f37049fe384adb986907d4791b56536be109853f719462399a852d531ab3\",\"dweb:/ipfs/QmcFAADpGqvSCPPADG1d9nQr3z8ffRtTh6ekAUMV8zXsfU\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\nimport \"./EutLibrary.sol\";\nimport \"./ERC165.sol\";\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721MetaData.sol\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n\n\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\npragma solidity ^0.8.0;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n",
  "sourcePath": "/home/yudi/EUT/contracts/IERC721.sol",
  "ast": {
    "absolutePath": "project:/contracts/IERC721.sol",
    "exportedSymbols": {
      "Address": [
        6725
      ],
      "Context": [
        6120
      ],
      "ERC165": [
        5236
      ],
      "EnumerableMap": [
        8443
      ],
      "EnumerableSet": [
        7323
      ],
      "IERC165": [
        9215
      ],
      "IERC721": [
        9332
      ],
      "IERC721Enumerable": [
        9385
      ],
      "IERC721Metadata": [
        9356
      ],
      "IERC721Receiver": [
        9402
      ],
      "Ownable": [
        8779
      ],
      "SafeMath": [
        6431
      ],
      "Strings": [
        8668
      ]
    },
    "id": 9403,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "project:/contracts/EutLibrary.sol",
        "file": "./EutLibrary.sol",
        "id": 9217,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9403,
        "sourceUnit": 8780,
        "src": "32:26:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 9218,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9403,
        "sourceUnit": 5237,
        "src": "59:22:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9219,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "141:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9221,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9215,
              "src": "255:7:26"
            },
            "id": 9222,
            "nodeType": "InheritanceSpecifier",
            "src": "255:7:26"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9220,
          "nodeType": "StructuredDocumentation",
          "src": "166:67:26",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 9332,
        "linearizedBaseContracts": [
          9332,
          9215
        ],
        "name": "IERC721",
        "nameLocation": "244:7:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 9223,
              "nodeType": "StructuredDocumentation",
              "src": "269:88:26",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 9231,
            "name": "Transfer",
            "nameLocation": "368:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9225,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "393:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9231,
                  "src": "377:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9227,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "415:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9231,
                  "src": "399:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9229,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "435:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9231,
                  "src": "419:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:67:26"
            },
            "src": "362:82:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9232,
              "nodeType": "StructuredDocumentation",
              "src": "450:94:26",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 9240,
            "name": "Approval",
            "nameLocation": "555:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9234,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "580:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "564:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9236,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "603:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "587:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9238,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "629:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "613:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:74:26"
            },
            "src": "549:89:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9241,
              "nodeType": "StructuredDocumentation",
              "src": "644:117:26",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 9249,
            "name": "ApprovalForAll",
            "nameLocation": "772:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9243,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "803:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9249,
                  "src": "787:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9245,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "826:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9249,
                  "src": "810:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "841:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9249,
                  "src": "836:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:64:26"
            },
            "src": "766:85:26"
          },
          {
            "documentation": {
              "id": 9250,
              "nodeType": "StructuredDocumentation",
              "src": "857:76:26",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 9257,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "947:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9252,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "965:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9257,
                  "src": "957:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:15:26"
            },
            "returnParameters": {
              "id": 9256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9255,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1003:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9257,
                  "src": "995:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:17:26"
            },
            "scope": 9332,
            "src": "938:74:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9258,
              "nodeType": "StructuredDocumentation",
              "src": "1018:131:26",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 9265,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1163:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9260,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1179:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9265,
                  "src": "1171:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1170:17:26"
            },
            "returnParameters": {
              "id": 9264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9263,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1219:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9265,
                  "src": "1211:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1210:15:26"
            },
            "scope": 9332,
            "src": "1154:72:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9266,
              "nodeType": "StructuredDocumentation",
              "src": "1232:556:26",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 9277,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1802:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9268,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1836:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9277,
                  "src": "1828:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9270,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1858:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9277,
                  "src": "1850:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9272,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1878:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9277,
                  "src": "1870:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9274,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1910:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9277,
                  "src": "1895:19:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9273,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1818:102:26"
            },
            "returnParameters": {
              "id": 9276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:0:26"
            },
            "scope": 9332,
            "src": "1793:137:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9278,
              "nodeType": "StructuredDocumentation",
              "src": "1936:687:26",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 9287,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "2637:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9280,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2671:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9287,
                  "src": "2663:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2663:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9282,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2693:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9287,
                  "src": "2685:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9284,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2713:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9287,
                  "src": "2705:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2705:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:73:26"
            },
            "returnParameters": {
              "id": 9286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2735:0:26"
            },
            "scope": 9332,
            "src": "2628:108:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9288,
              "nodeType": "StructuredDocumentation",
              "src": "2742:504:26",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 9297,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3260:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9290,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3290:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9297,
                  "src": "3282:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9292,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3312:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9297,
                  "src": "3304:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3304:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9294,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3332:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9297,
                  "src": "3324:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3272:73:26"
            },
            "returnParameters": {
              "id": 9296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3354:0:26"
            },
            "scope": 9332,
            "src": "3251:104:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9298,
              "nodeType": "StructuredDocumentation",
              "src": "3361:452:26",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 9305,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3827:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9300,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3843:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9305,
                  "src": "3835:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3835:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9302,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3855:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9305,
                  "src": "3847:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3847:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3834:29:26"
            },
            "returnParameters": {
              "id": 9304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3872:0:26"
            },
            "scope": 9332,
            "src": "3818:55:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9306,
              "nodeType": "StructuredDocumentation",
              "src": "3879:309:26",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 9313,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4202:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9308,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4228:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9313,
                  "src": "4220:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4220:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9310,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "4243:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9313,
                  "src": "4238:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9309,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4219:34:26"
            },
            "returnParameters": {
              "id": 9312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4262:0:26"
            },
            "scope": 9332,
            "src": "4193:70:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9314,
              "nodeType": "StructuredDocumentation",
              "src": "4269:139:26",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 9321,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4422:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9316,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4442:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9321,
                  "src": "4434:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4434:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4433:17:26"
            },
            "returnParameters": {
              "id": 9320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9319,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4482:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9321,
                  "src": "4474:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4473:18:26"
            },
            "scope": 9332,
            "src": "4413:79:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9322,
              "nodeType": "StructuredDocumentation",
              "src": "4498:138:26",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 9331,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4650:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9324,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4675:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9331,
                  "src": "4667:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4667:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9326,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4690:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9331,
                  "src": "4682:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4666:33:26"
            },
            "returnParameters": {
              "id": 9330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9331,
                  "src": "4723:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4723:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4722:6:26"
            },
            "scope": 9332,
            "src": "4641:88:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9403,
        "src": "234:4497:26",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9334,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9332,
              "src": "4973:7:26"
            },
            "id": 9335,
            "nodeType": "InheritanceSpecifier",
            "src": "4973:7:26"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9333,
          "nodeType": "StructuredDocumentation",
          "src": "4810:133:26",
          "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
        "id": 9356,
        "linearizedBaseContracts": [
          9356,
          9332,
          9215
        ],
        "name": "IERC721Metadata",
        "nameLocation": "4954:15:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9336,
              "nodeType": "StructuredDocumentation",
              "src": "4987:58:26",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 9341,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "5059:4:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5063:2:26"
            },
            "returnParameters": {
              "id": 9340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9339,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9341,
                  "src": "5089:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:15:26"
            },
            "scope": 9356,
            "src": "5050:54:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9342,
              "nodeType": "StructuredDocumentation",
              "src": "5110:60:26",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 9347,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "5184:6:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5190:2:26"
            },
            "returnParameters": {
              "id": 9346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9347,
                  "src": "5216:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9344,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5215:15:26"
            },
            "scope": 9356,
            "src": "5175:56:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9348,
              "nodeType": "StructuredDocumentation",
              "src": "5237:90:26",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 9355,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5341:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9350,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5358:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9355,
                  "src": "5350:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:17:26"
            },
            "returnParameters": {
              "id": 9354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9355,
                  "src": "5390:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5390:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5389:15:26"
            },
            "scope": 9356,
            "src": "5332:73:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9403,
        "src": "4944:463:26",
        "usedErrors": []
      },
      {
        "id": 9357,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "5491:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9359,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9332,
              "src": "5684:7:26"
            },
            "id": 9360,
            "nodeType": "InheritanceSpecifier",
            "src": "5684:7:26"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9358,
          "nodeType": "StructuredDocumentation",
          "src": "5516:136:26",
          "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
        "id": 9385,
        "linearizedBaseContracts": [
          9385,
          9332,
          9215
        ],
        "name": "IERC721Enumerable",
        "nameLocation": "5663:17:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9361,
              "nodeType": "StructuredDocumentation",
              "src": "5698:82:26",
              "text": " @dev Returns the total amount of tokens stored by the contract."
            },
            "functionSelector": "18160ddd",
            "id": 9366,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "5794:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5805:2:26"
            },
            "returnParameters": {
              "id": 9365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9366,
                  "src": "5831:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5831:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5830:9:26"
            },
            "scope": 9385,
            "src": "5785:55:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9367,
              "nodeType": "StructuredDocumentation",
              "src": "5846:171:26",
              "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
            },
            "functionSelector": "2f745c59",
            "id": 9376,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "6031:19:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9369,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6059:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9376,
                  "src": "6051:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6051:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9371,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6074:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9376,
                  "src": "6066:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6066:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6050:30:26"
            },
            "returnParameters": {
              "id": 9375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9376,
                  "src": "6104:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6104:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6103:9:26"
            },
            "scope": 9385,
            "src": "6022:91:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9377,
              "nodeType": "StructuredDocumentation",
              "src": "6119:164:26",
              "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
            },
            "functionSelector": "4f6ccce7",
            "id": 9384,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "6297:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9379,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6318:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9384,
                  "src": "6310:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6310:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6309:15:26"
            },
            "returnParameters": {
              "id": 9383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9382,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9384,
                  "src": "6348:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6348:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6347:9:26"
            },
            "scope": 9385,
            "src": "6288:69:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9403,
        "src": "5653:706:26",
        "usedErrors": []
      },
      {
        "id": 9386,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "6427:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9387,
          "nodeType": "StructuredDocumentation",
          "src": "6452:152:26",
          "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
        },
        "fullyImplemented": false,
        "id": 9402,
        "linearizedBaseContracts": [
          9402
        ],
        "name": "IERC721Receiver",
        "nameLocation": "6615:15:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9388,
              "nodeType": "StructuredDocumentation",
              "src": "6637:493:26",
              "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 9401,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "7144:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9390,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7178:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9401,
                  "src": "7170:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7170:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9392,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7204:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9401,
                  "src": "7196:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7196:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9394,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7226:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9401,
                  "src": "7218:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7218:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9396,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7258:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 9401,
                  "src": "7243:19:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9395,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7243:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7160:108:26"
            },
            "returnParameters": {
              "id": 9400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9401,
                  "src": "7287:6:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9398,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7286:8:26"
            },
            "scope": 9402,
            "src": "7135:160:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9403,
        "src": "6605:692:26",
        "usedErrors": []
      }
    ],
    "src": "32:7266:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-10T15:49:30.694Z",
  "devdoc": {
    "details": "See https://eips.ethereum.org/EIPS/eip-721",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "name()": {
        "details": "Returns the token collection name."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the token collection symbol."
      },
      "tokenURI(uint256)": {
        "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}